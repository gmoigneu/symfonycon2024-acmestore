routes:
    "https://{all}/": { type: upstream, upstream: "app:http" }
    "http://{all}/": { type: redirect, to: "https://{all}/" }

services: 
    database:
        type: postgresql:16

    

applications:
    app:
        source:
            root: "/"

        type: php:8.3

        runtime:
            extensions:
                - apcu
                - blackfire
                - ctype
                - iconv
                - mbstring
                - pdo_pgsql
                - sodium
                - xsl
                

        variables:
            php:
                opcache.preload: config/preload.php
        build:
            flavor: none

        web:
            locations:
                "/":
                    root: "public"
                    expires: 1h
                    passthru: "/index.php"

        mounts:
            "/var": { source: storage, source_path: var }
            "/.transformers-cache": { source: storage, source_path: transformers-cache }
            

        relationships:
            database: "database:postgresql"
            
        hooks:
            build: |
                set -x -e

                curl -fs https://get.symfony.com/cloud/configurator | bash
                
                NODE_VERSION=18 symfony-build
                ./vendor/bin/transformers install

            deploy: |
                set -x -e

                ./vendor/bin/transformers download Xenova/vit-base-patch16-224
                ./vendor/bin/transformers download Xenova/distilbert-base-uncased-finetuned-sst-2-english

                symfony-deploy

        crons:
            security-check:
                # Check that no security issues have been found for PHP packages deployed in production
                spec: '50 23 * * *'
                cmd: if [ "$PLATFORM_ENVIRONMENT_TYPE" = "production" ]; then croncape COMPOSER_ROOT_VERSION=1.0.0 COMPOSER_AUDIT_ABANDONED=ignore composer audit --no-cache; fi

        workers:
            messenger:
                commands:
                    # Consume "async" messages (as configured in the routing section of config/packages/messenger.yaml)
                    start: symfony console --time-limit=3600 --memory-limit=64M messenger:consume async
